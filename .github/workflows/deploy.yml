# name: deploy_event_service
# on:
#   push:
#     branches: [ "dev" ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Install Ruby and gems
#         uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
#         with:
#           bundler-cache: true
#       - name: Run command on remote server
#         uses: D3rHase/ssh-command-action@v0.2.2
#         with:
#           host: ${{secrets.SSH_HOST}}
#           user: ${{secrets.SSH_USER}}
#           private_key: ${{secrets.SSH_PRIVATE_KEY}}
#           command: |
#               cd event_service
#               git checkout dev;
#               git pull;
#               docker-compose --file docker-compose.prod.yml down;
#               docker-compose --file docker-compose.prod.yml up -d;
#               ~/go/bin goose -dir migrations "postgresql://${{secrets.PSQL_USERNAME}}:${{secrets.PSQL_PASSWORD}}@${{secrets.PSQL_HOST}}:${{secrets.PSQL_DBPORT}}/${{secrets.PSQL_DBNAME}}?sslmode=disable" up

name: deploy

on:
  push:
    branches: [ "dev" ]

jobs:
  deploy:
    name: Deploy
    runs-on: dev-server

    steps:
    - uses: actions/checkout@v4
    - name: Environment Var Init
      run: |
        echo "
          DB_NAME=${{secrets.PSQL_DBNAME}}
          DB_USER=${{secrets.PSQL_USERNAME}}
          DB_PASSWORD=${{secrets.PSQL_PASSWORD}}
          S_HOST=asdasd
          S_TOKEN=asdasd
          CHECK_EVENTS_SEC=10
          SEND_MSG_SEC=5
          JWT_SECRET_KEY=asdasd"> .env
    - name: create docker compose config
      run: |
        docker compose up --build -d